#include <Arduino.h>
#include "ACS712.h"
#include "BTHC05.h"
#include "DHT.h"
#include "Relay.h"
#include<TinyGPS.h>
#include<SoftwareSerial.h>


// Pin Definitions
#define ACS712_PIN_VO	A0
#define BTHC05_PIN_TXD	11
#define BTHC05_PIN_RXD	10
#define DHT_PIN_DATA	4
#define RELAY_PIN	5
#define SIM800L_SOFTWARESERIAL_PIN_TX	2
#define SIM800L_SOFTWARESERIAL_PIN_RX	3

SoftwareSerial mySerial(2,3);

void setup()
{
  Serial.begin(9600);
  mySerial.begin(9600);  
  bthc05.begin(9600);
  Gsm.begin(9600);
  
}

void loop()
{
 current_reading()
 dht_reading()
}

void Gsm()
{
  if (Serial.available()>0)
  {
   if (mySerial.available()>0)
   Serial.write(mySerial.read());
   {
   mySerial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
   delay(1000);  // Delay of 1000 milli seconds or 1 second
   mySerial.println("AT+CMGS=\"+91xxxxxxxxxx\"\r"); // Replace x with mobile number
   delay(1000);
   mySerial.println("I am SMS from GSM Module");// The SMS text you want to send
   delay(100);
   mySerial.println((char)26);// ASCII code of CTRL+Z
   delay(1000);
   }
  }
}
void bluetooth()
{
  if (BTserial.available())
  {   
   c = BTserial.read();
   Serial.write(c);
  }

  if (Serial.available())
  {
  c =  Serial.read();
  BTserial.write(c); 
  }

}

void dht_reading()
{
    DHT.read11(DHT_PIN_DATA);
    Serial.print("Current humidity = ");
    Serial.print(DHT.humidity);
    Serial.print("%  ");
    Serial.print("temperature = ");
    Serial.print(DHT.temperature); 
    Serial.println("C  ");
    
   if(DHT.temperature> //put the overload temperature of line// || DHT.temperature< // put the underload temperature of line//)
   {
   Gsm();
   }
delay(10000);
}

void current_readings()
{
const int averageValue = 500;
long int sensorValue = 0;
float sensitivity = 1000.0 / 200.0; //1000mA per 200mV 
float Vref = 1508;
// Read the value 500 times:
  for (int i = 0; i < averageValue; i++)
  {
    sensorValue += analogRead(Pin);

    // wait 2 milliseconds before the next loop
    delay(2000);
  }
sensorValue = sensorValue / averageValue;


  // The on-board ADC is 10-bits 
  // Different power supply will lead to different reference sources
  // example: 2^10 = 1024 -> 5V / 1024 ~= 4.88mV
  //          unitValue= 5.0 / 1024.0*1000 ;
  float unitValue= RefVal / 1024.0*1000 ;
  float voltage = unitValue * sensorValue; 

  // Calculate the corresponding current
  float current = (voltage - Vref) * sensitivity;

  voltage = unitValue * sensorValue-Vref;
  SERIAL.print(voltage);
  SERIAL.println("mV");

  // Print display current (mA)
  SERIAL.print(current);
  SERIAL.println("mA");

  SERIAL.print("\n");

  // Reset the sensorValue for the next reading
  sensorValue = 0;
  // Read it once per second
  delay(10000);
  
  if(current>//put limit maximum current limit || current < // put limit minimum current limit)
  {
  digitalWrite(RELAY_PIN, LOW);
  bluetooth();  
  Gsm();
  }
     
}
 

